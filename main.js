/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var we=Object.create;var w=Object.defineProperty;var Re=Object.getOwnPropertyDescriptor;var Oe=Object.getOwnPropertyNames;var Ae=Object.getPrototypeOf,Pe=Object.prototype.hasOwnProperty;var E=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),Le=(i,e)=>{for(var t in e)w(i,t,{get:e[t],enumerable:!0})},J=(i,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Oe(e))!Pe.call(i,n)&&n!==t&&w(i,n,{get:()=>e[n],enumerable:!(s=Re(e,n))||s.enumerable});return i};var z=(i,e,t)=>(t=i!=null?we(Ae(i)):{},J(e||!i||!i.__esModule?w(t,"default",{value:i,enumerable:!0}):t,i)),Ve=i=>J(w({},"__esModule",{value:!0}),i);var ee=E(()=>{});var R=E((St,te)=>{"use strict";var S;try{let{app:i}=require("electron");S=i.setAsDefaultProtocolClient.bind(i)}catch(i){try{S=ee()}catch(e){}}typeof S!="function"&&(S=()=>!1);function Be(){return typeof process!="undefined"?process.pid:null}var xe=()=>{let i="";for(let e=0;e<32;e+=1){(e===8||e===12||e===16||e===20)&&(i+="-");let t;if(e===12)t=4;else{let s=Math.random()*16|0;e===16?t=s&3|0:t=s}i+=t.toString(16)}return i};te.exports={pid:Be,register:S,uuid:xe}});var U=E((v,se)=>{"use strict";var ke=function(){if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw new Error("unable to locate global object")},C=ke();se.exports=v=C.fetch;C.fetch&&(v.default=C.fetch.bind(C));v.Headers=C.Headers;v.Request=C.Request;v.Response=C.Response});var ne=E((Dt,O)=>{"use strict";var Ue=require("net"),Me=require("events"),Ge=U(),{uuid:Fe}=R(),_={HANDSHAKE:0,FRAME:1,CLOSE:2,PING:3,PONG:4};function He(i){if(process.platform==="win32")return`\\\\?\\pipe\\discord-ipc-${i}`;let{env:{XDG_RUNTIME_DIR:e,TMPDIR:t,TMP:s,TEMP:n}}=process;return`${(e||t||s||n||"/tmp").replace(/\/$/,"")}/discord-ipc-${i}`}function ie(i=0){return new Promise((e,t)=>{let s=He(i),n=()=>{i<10?e(ie(i+1)):t(new Error("Could not connect"))},r=Ue.createConnection(s,()=>{r.removeListener("error",n),e(r)});r.once("error",n)})}async function M(i=0){if(i>30)throw new Error("Could not find endpoint");let e=`http://127.0.0.1:${6463+i%10}`;try{return(await Ge(e)).status===404?e:M(i+1)}catch(t){return M(i+1)}}function G(i,e){e=JSON.stringify(e);let t=Buffer.byteLength(e),s=Buffer.alloc(8+t);return s.writeInt32LE(i,0),s.writeInt32LE(t,4),s.write(e,8,t),s}var I={full:"",op:void 0};function H(i,e){let t=i.read();if(!t)return;let{op:s}=I,n;if(I.full===""){s=I.op=t.readInt32LE(0);let r=t.readInt32LE(4);n=t.slice(8,r+8)}else n=t.toString();try{let r=JSON.parse(I.full+n);e({op:s,data:r}),I.full="",I.op=void 0}catch(r){I.full+=n}H(i,e)}var F=class extends Me{constructor(e){super(),this.client=e,this.socket=null}async connect(){let e=this.socket=await ie();e.on("close",this.onClose.bind(this)),e.on("error",this.onClose.bind(this)),this.emit("open"),e.write(G(_.HANDSHAKE,{v:1,client_id:this.client.clientId})),e.pause(),e.on("readable",()=>{H(e,({op:t,data:s})=>{switch(t){case _.PING:this.send(s,_.PONG);break;case _.FRAME:if(!s)return;s.cmd==="AUTHORIZE"&&s.evt!=="ERROR"&&M().then(n=>{this.client.request.endpoint=n}).catch(n=>{this.client.emit("error",n)}),this.emit("message",s);break;case _.CLOSE:this.emit("close",s);break;default:break}})})}onClose(e){this.emit("close",e)}send(e,t=_.FRAME){this.socket.write(G(t,e))}async close(){return new Promise(e=>{this.once("close",e),this.send({},_.CLOSE),this.socket.end()})}ping(){this.send(Fe(),_.PING)}};O.exports=F;O.exports.encode=G;O.exports.decode=H});var Y=E(g=>{"use strict";function re(i){let e={};for(let t of i)e[t]=t;return e}g.browser=typeof window!="undefined";g.RPCCommands=re(["DISPATCH","AUTHORIZE","AUTHENTICATE","GET_GUILD","GET_GUILDS","GET_CHANNEL","GET_CHANNELS","CREATE_CHANNEL_INVITE","GET_RELATIONSHIPS","GET_USER","SUBSCRIBE","UNSUBSCRIBE","SET_USER_VOICE_SETTINGS","SET_USER_VOICE_SETTINGS_2","SELECT_VOICE_CHANNEL","GET_SELECTED_VOICE_CHANNEL","SELECT_TEXT_CHANNEL","GET_VOICE_SETTINGS","SET_VOICE_SETTINGS_2","SET_VOICE_SETTINGS","CAPTURE_SHORTCUT","SET_ACTIVITY","SEND_ACTIVITY_JOIN_INVITE","CLOSE_ACTIVITY_JOIN_REQUEST","ACTIVITY_INVITE_USER","ACCEPT_ACTIVITY_INVITE","INVITE_BROWSER","DEEP_LINK","CONNECTIONS_CALLBACK","BRAINTREE_POPUP_BRIDGE_CALLBACK","GIFT_CODE_BROWSER","GUILD_TEMPLATE_BROWSER","OVERLAY","BROWSER_HANDOFF","SET_CERTIFIED_DEVICES","GET_IMAGE","CREATE_LOBBY","UPDATE_LOBBY","DELETE_LOBBY","UPDATE_LOBBY_MEMBER","CONNECT_TO_LOBBY","DISCONNECT_FROM_LOBBY","SEND_TO_LOBBY","SEARCH_LOBBIES","CONNECT_TO_LOBBY_VOICE","DISCONNECT_FROM_LOBBY_VOICE","SET_OVERLAY_LOCKED","OPEN_OVERLAY_ACTIVITY_INVITE","OPEN_OVERLAY_GUILD_INVITE","OPEN_OVERLAY_VOICE_SETTINGS","VALIDATE_APPLICATION","GET_ENTITLEMENT_TICKET","GET_APPLICATION_TICKET","START_PURCHASE","GET_SKUS","GET_ENTITLEMENTS","GET_NETWORKING_CONFIG","NETWORKING_SYSTEM_METRICS","NETWORKING_PEER_METRICS","NETWORKING_CREATE_TOKEN","SET_USER_ACHIEVEMENT","GET_USER_ACHIEVEMENTS"]);g.RPCEvents=re(["CURRENT_USER_UPDATE","GUILD_STATUS","GUILD_CREATE","CHANNEL_CREATE","RELATIONSHIP_UPDATE","VOICE_CHANNEL_SELECT","VOICE_STATE_CREATE","VOICE_STATE_DELETE","VOICE_STATE_UPDATE","VOICE_SETTINGS_UPDATE","VOICE_SETTINGS_UPDATE_2","VOICE_CONNECTION_STATUS","SPEAKING_START","SPEAKING_STOP","GAME_JOIN","GAME_SPECTATE","ACTIVITY_JOIN","ACTIVITY_JOIN_REQUEST","ACTIVITY_SPECTATE","ACTIVITY_INVITE","NOTIFICATION_CREATE","MESSAGE_CREATE","MESSAGE_UPDATE","MESSAGE_DELETE","LOBBY_DELETE","LOBBY_UPDATE","LOBBY_MEMBER_CONNECT","LOBBY_MEMBER_DISCONNECT","LOBBY_MEMBER_UPDATE","LOBBY_MESSAGE","CAPTURE_SHORTCUT_CHANGE","OVERLAY","OVERLAY_UPDATE","ENTITLEMENT_CREATE","ENTITLEMENT_DELETE","USER_ACHIEVEMENT_UPDATE","READY","ERROR"]);g.RPCErrors={CAPTURE_SHORTCUT_ALREADY_LISTENING:5004,GET_GUILD_TIMED_OUT:5002,INVALID_ACTIVITY_JOIN_REQUEST:4012,INVALID_ACTIVITY_SECRET:5005,INVALID_CHANNEL:4005,INVALID_CLIENTID:4007,INVALID_COMMAND:4002,INVALID_ENTITLEMENT:4015,INVALID_EVENT:4004,INVALID_GIFT_CODE:4016,INVALID_GUILD:4003,INVALID_INVITE:4011,INVALID_LOBBY:4013,INVALID_LOBBY_SECRET:4014,INVALID_ORIGIN:4008,INVALID_PAYLOAD:4e3,INVALID_PERMISSIONS:4006,INVALID_TOKEN:4009,INVALID_USER:4010,LOBBY_FULL:5007,NO_ELIGIBLE_ACTIVITY:5006,OAUTH2_ERROR:5e3,PURCHASE_CANCELED:5008,PURCHASE_ERROR:5009,RATE_LIMITED:5011,SELECT_CHANNEL_TIMED_OUT:5001,SELECT_VOICE_FORCE_REQUIRED:5003,SERVICE_UNAVAILABLE:1001,TRANSACTION_ABORTED:1002,UNAUTHORIZED_FOR_ACHIEVEMENT:5010,UNKNOWN_ERROR:1e3};g.RPCCloseCodes={CLOSE_NORMAL:1e3,CLOSE_UNSUPPORTED:1003,CLOSE_ABNORMAL:1006,INVALID_CLIENTID:4e3,INVALID_ORIGIN:4001,RATELIMITED:4002,TOKEN_REVOKED:4003,INVALID_VERSION:4004,INVALID_ENCODING:4005};g.LobbyTypes={PRIVATE:1,PUBLIC:2};g.RelationshipTypes={NONE:0,FRIEND:1,BLOCKED:2,PENDING_INCOMING:3,PENDING_OUTGOING:4,IMPLICIT:5}});var ae=E(()=>{});var le=E((Rt,ce)=>{"use strict";var Ye=require("events"),{browser:oe}=Y(),qe=oe?window.WebSocket:ae(),$e=i=>JSON.stringify(i),Ke=i=>JSON.parse(i),q=class extends Ye{constructor(e){super(),this.client=e,this.ws=null,this.tries=0}async connect(){let e=6463+this.tries%10;this.tries+=1,this.ws=new qe(`ws://127.0.0.1:${e}/?v=1&client_id=${this.client.clientId}`,oe?void 0:{origin:this.client.options.origin}),this.ws.onopen=this.onOpen.bind(this),this.ws.onclose=this.onClose.bind(this),this.ws.onerror=this.onError.bind(this),this.ws.onmessage=this.onMessage.bind(this)}onOpen(){this.emit("open")}onClose(e){e.wasClean&&this.emit("close",e)}onError(e){try{this.ws.close()}catch(t){}this.tries>20?this.emit("error",e.error):setTimeout(()=>{this.connect()},250)}onMessage(e){this.emit("message",Ke(e.data))}send(e){this.ws.send($e(e))}ping(){}close(){return new Promise(e=>{this.once("close",e),this.ws.close()})}};ce.exports=q});var he=E((Ot,de)=>{"use strict";de.exports={ipc:ne(),websocket:le()}});var me=E((At,Ee)=>{"use strict";var je=require("events"),{setTimeout:We,clearTimeout:Je}=require("timers"),ze=U(),Qe=he(),{RPCCommands:l,RPCEvents:ue,RelationshipTypes:Ze}=Y(),{pid:pe,uuid:Xe}=R();function et(i,e){return`${i}${JSON.stringify(e)}`}var $=class extends je{constructor(e={}){super(),this.options=e,this.accessToken=null,this.clientId=null,this.application=null,this.user=null;let t=Qe[e.transport];if(!t)throw new TypeError("RPC_INVALID_TRANSPORT",e.transport);this.fetch=(s,n,{data:r,query:a}={})=>ze(`${this.fetch.endpoint}${n}${a?new URLSearchParams(a):""}`,{method:s,body:r,headers:{Authorization:`Bearer ${this.accessToken}`}}).then(async o=>{let c=await o.json();if(!o.ok){let p=new Error(o.status);throw p.body=c,p}return c}),this.fetch.endpoint="https://discord.com/api",this.transport=new t(this),this.transport.on("message",this._onRpcMessage.bind(this)),this._expecting=new Map,this._connectPromise=void 0}connect(e){return this._connectPromise?this._connectPromise:(this._connectPromise=new Promise((t,s)=>{this.clientId=e;let n=We(()=>s(new Error("RPC_CONNECTION_TIMEOUT")),1e4);n.unref(),this.once("connected",()=>{Je(n),t(this)}),this.transport.once("close",()=>{this._expecting.forEach(r=>{r.reject(new Error("connection closed"))}),this.emit("disconnected"),s(new Error("connection closed"))}),this.transport.connect().catch(s)}),this._connectPromise)}async login(e={}){let{clientId:t,accessToken:s}=e;return await this.connect(t),e.scopes?(s||(s=await this.authorize(e)),this.authenticate(s)):(this.emit("ready"),this)}request(e,t,s){return new Promise((n,r)=>{let a=Xe();this.transport.send({cmd:e,args:t,evt:s,nonce:a}),this._expecting.set(a,{resolve:n,reject:r})})}_onRpcMessage(e){if(e.cmd===l.DISPATCH&&e.evt===ue.READY)e.data.user&&(this.user=e.data.user),this.emit("connected");else if(this._expecting.has(e.nonce)){let{resolve:t,reject:s}=this._expecting.get(e.nonce);if(e.evt==="ERROR"){let n=new Error(e.data.message);n.code=e.data.code,n.data=e.data,s(n)}else t(e.data);this._expecting.delete(e.nonce)}else this.emit(e.evt,e.data)}async authorize({scopes:e,clientSecret:t,rpcToken:s,redirectUri:n,prompt:r}={}){t&&s===!0&&(s=(await this.fetch("POST","/oauth2/token/rpc",{data:new URLSearchParams({client_id:this.clientId,client_secret:t})})).rpc_token);let{code:a}=await this.request("AUTHORIZE",{scopes:e,client_id:this.clientId,prompt:r,rpc_token:s});return(await this.fetch("POST","/oauth2/token",{data:new URLSearchParams({client_id:this.clientId,client_secret:t,code:a,grant_type:"authorization_code",redirect_uri:n})})).access_token}authenticate(e){return this.request("AUTHENTICATE",{access_token:e}).then(({application:t,user:s})=>(this.accessToken=e,this.application=t,this.user=s,this.emit("ready"),this))}getGuild(e,t){return this.request(l.GET_GUILD,{guild_id:e,timeout:t})}getGuilds(e){return this.request(l.GET_GUILDS,{timeout:e})}getChannel(e,t){return this.request(l.GET_CHANNEL,{channel_id:e,timeout:t})}async getChannels(e,t){let{channels:s}=await this.request(l.GET_CHANNELS,{timeout:t,guild_id:e});return s}setCertifiedDevices(e){return this.request(l.SET_CERTIFIED_DEVICES,{devices:e.map(t=>({type:t.type,id:t.uuid,vendor:t.vendor,model:t.model,related:t.related,echo_cancellation:t.echoCancellation,noise_suppression:t.noiseSuppression,automatic_gain_control:t.automaticGainControl,hardware_mute:t.hardwareMute}))})}setUserVoiceSettings(e,t){return this.request(l.SET_USER_VOICE_SETTINGS,{user_id:e,pan:t.pan,mute:t.mute,volume:t.volume})}selectVoiceChannel(e,{timeout:t,force:s=!1}={}){return this.request(l.SELECT_VOICE_CHANNEL,{channel_id:e,timeout:t,force:s})}selectTextChannel(e,{timeout:t}={}){return this.request(l.SELECT_TEXT_CHANNEL,{channel_id:e,timeout:t})}getVoiceSettings(){return this.request(l.GET_VOICE_SETTINGS).then(e=>({automaticGainControl:e.automatic_gain_control,echoCancellation:e.echo_cancellation,noiseSuppression:e.noise_suppression,qos:e.qos,silenceWarning:e.silence_warning,deaf:e.deaf,mute:e.mute,input:{availableDevices:e.input.available_devices,device:e.input.device_id,volume:e.input.volume},output:{availableDevices:e.output.available_devices,device:e.output.device_id,volume:e.output.volume},mode:{type:e.mode.type,autoThreshold:e.mode.auto_threshold,threshold:e.mode.threshold,shortcut:e.mode.shortcut,delay:e.mode.delay}}))}setVoiceSettings(e){return this.request(l.SET_VOICE_SETTINGS,{automatic_gain_control:e.automaticGainControl,echo_cancellation:e.echoCancellation,noise_suppression:e.noiseSuppression,qos:e.qos,silence_warning:e.silenceWarning,deaf:e.deaf,mute:e.mute,input:e.input?{device_id:e.input.device,volume:e.input.volume}:void 0,output:e.output?{device_id:e.output.device,volume:e.output.volume}:void 0,mode:e.mode?{type:e.mode.type,auto_threshold:e.mode.autoThreshold,threshold:e.mode.threshold,shortcut:e.mode.shortcut,delay:e.mode.delay}:void 0})}captureShortcut(e){let t=et(ue.CAPTURE_SHORTCUT_CHANGE),s=()=>(this._subscriptions.delete(t),this.request(l.CAPTURE_SHORTCUT,{action:"STOP"}));return this._subscriptions.set(t,({shortcut:n})=>{e(n,s)}),this.request(l.CAPTURE_SHORTCUT,{action:"START"}).then(()=>s)}setActivity(e={},t=pe()){let s,n,r,a;if(e.startTimestamp||e.endTimestamp){if(s={start:e.startTimestamp,end:e.endTimestamp},s.start instanceof Date&&(s.start=Math.round(s.start.getTime())),s.end instanceof Date&&(s.end=Math.round(s.end.getTime())),s.start>2147483647e3)throw new RangeError("timestamps.start must fit into a unix timestamp");if(s.end>2147483647e3)throw new RangeError("timestamps.end must fit into a unix timestamp")}return(e.largeImageKey||e.largeImageText||e.smallImageKey||e.smallImageText)&&(n={large_image:e.largeImageKey,large_text:e.largeImageText,small_image:e.smallImageKey,small_text:e.smallImageText}),(e.partySize||e.partyId||e.partyMax)&&(r={id:e.partyId},(e.partySize||e.partyMax)&&(r.size=[e.partySize,e.partyMax])),(e.matchSecret||e.joinSecret||e.spectateSecret)&&(a={match:e.matchSecret,join:e.joinSecret,spectate:e.spectateSecret}),this.request(l.SET_ACTIVITY,{pid:t,activity:{state:e.state,details:e.details,timestamps:s,assets:n,party:r,secrets:a,buttons:e.buttons,instance:!!e.instance}})}clearActivity(e=pe()){return this.request(l.SET_ACTIVITY,{pid:e})}sendJoinInvite(e){return this.request(l.SEND_ACTIVITY_JOIN_INVITE,{user_id:e.id||e})}sendJoinRequest(e){return this.request(l.SEND_ACTIVITY_JOIN_REQUEST,{user_id:e.id||e})}closeJoinRequest(e){return this.request(l.CLOSE_ACTIVITY_JOIN_REQUEST,{user_id:e.id||e})}createLobby(e,t,s){return this.request(l.CREATE_LOBBY,{type:e,capacity:t,metadata:s})}updateLobby(e,{type:t,owner:s,capacity:n,metadata:r}={}){return this.request(l.UPDATE_LOBBY,{id:e.id||e,type:t,owner_id:s&&s.id||s,capacity:n,metadata:r})}deleteLobby(e){return this.request(l.DELETE_LOBBY,{id:e.id||e})}connectToLobby(e,t){return this.request(l.CONNECT_TO_LOBBY,{id:e,secret:t})}sendToLobby(e,t){return this.request(l.SEND_TO_LOBBY,{id:e.id||e,data:t})}disconnectFromLobby(e){return this.request(l.DISCONNECT_FROM_LOBBY,{id:e.id||e})}updateLobbyMember(e,t,s){return this.request(l.UPDATE_LOBBY_MEMBER,{lobby_id:e.id||e,user_id:t.id||t,metadata:s})}getRelationships(){let e=Object.keys(Ze);return this.request(l.GET_RELATIONSHIPS).then(t=>t.relationships.map(s=>({...s,type:e[s.type]})))}async subscribe(e,t){return await this.request(l.SUBSCRIBE,t,e),{unsubscribe:()=>this.request(l.UNSUBSCRIBE,t,e)}}async destroy(){await this.transport.close()}};Ee.exports=$});var _e=E((Pt,Te)=>{"use strict";var tt=R();Te.exports={Client:me(),register(i){return tt.register(`discord-${i}`)}}});var ge=E((Lt,st)=>{st.exports={name:"dotenv",version:"17.2.2",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard",pretest:"npm run lint && npm run dts-check",test:"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},homepage:"https://github.com/motdotla/dotenv#readme",funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@types/node":"^18.11.3",decache:"^4.6.2",sinon:"^14.0.1",standard:"^17.0.0","standard-version":"^9.5.0",tap:"^19.2.0",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var Se=E((Vt,T)=>{var K=require("fs"),A=require("path"),it=require("os"),nt=require("crypto"),rt=ge(),j=rt.version,fe=["\u{1F510} encrypt with Dotenvx: https://dotenvx.com","\u{1F510} prevent committing .env to code: https://dotenvx.com/precommit","\u{1F510} prevent building .env in docker: https://dotenvx.com/prebuild","\u{1F4E1} observe env with Radar: https://dotenvx.com/radar","\u{1F4E1} auto-backup env with Radar: https://dotenvx.com/radar","\u{1F4E1} version env with Radar: https://dotenvx.com/radar","\u{1F6E0}\uFE0F  run anywhere with `dotenvx run -- yourcommand`","\u2699\uFE0F  specify custom .env file path with { path: '/custom/path/.env' }","\u2699\uFE0F  enable debug logging with { debug: true }","\u2699\uFE0F  override existing env vars with { override: true }","\u2699\uFE0F  suppress all logs with { quiet: true }","\u2699\uFE0F  write to custom object with { processEnv: myObject }","\u2699\uFE0F  load multiple .env files with { path: ['.env.local', '.env'] }"];function at(){return fe[Math.floor(Math.random()*fe.length)]}function N(i){return typeof i=="string"?!["false","0","no","off",""].includes(i.toLowerCase()):Boolean(i)}function ot(){return process.stdout.isTTY}function ct(i){return ot()?`\x1B[2m${i}\x1B[0m`:i}var lt=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function dt(i){let e={},t=i.toString();t=t.replace(/\r\n?/mg,`
`);let s;for(;(s=lt.exec(t))!=null;){let n=s[1],r=s[2]||"";r=r.trim();let a=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),a==='"'&&(r=r.replace(/\\n/g,`
`),r=r.replace(/\\r/g,"\r")),e[n]=r}return e}function ht(i){i=i||{};let e=Ne(i);i.path=e;let t=u.configDotenv(i);if(!t.parsed){let a=new Error(`MISSING_DATA: Cannot parse ${e} for an unknown reason`);throw a.code="MISSING_DATA",a}let s=ve(i).split(","),n=s.length,r;for(let a=0;a<n;a++)try{let o=s[a].trim(),c=pt(t,o);r=u.decrypt(c.ciphertext,c.key);break}catch(o){if(a+1>=n)throw o}return u.parse(r)}function ut(i){console.error(`[dotenv@${j}][WARN] ${i}`)}function D(i){console.log(`[dotenv@${j}][DEBUG] ${i}`)}function Ie(i){console.log(`[dotenv@${j}] ${i}`)}function ve(i){return i&&i.DOTENV_KEY&&i.DOTENV_KEY.length>0?i.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function pt(i,e){let t;try{t=new URL(e)}catch(o){if(o.code==="ERR_INVALID_URL"){let c=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw c.code="INVALID_DOTENV_KEY",c}throw o}let s=t.password;if(!s){let o=new Error("INVALID_DOTENV_KEY: Missing key part");throw o.code="INVALID_DOTENV_KEY",o}let n=t.searchParams.get("environment");if(!n){let o=new Error("INVALID_DOTENV_KEY: Missing environment part");throw o.code="INVALID_DOTENV_KEY",o}let r=`DOTENV_VAULT_${n.toUpperCase()}`,a=i.parsed[r];if(!a){let o=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${r} in your .env.vault file.`);throw o.code="NOT_FOUND_DOTENV_ENVIRONMENT",o}return{ciphertext:a,key:s}}function Ne(i){let e=null;if(i&&i.path&&i.path.length>0)if(Array.isArray(i.path))for(let t of i.path)K.existsSync(t)&&(e=t.endsWith(".vault")?t:`${t}.vault`);else e=i.path.endsWith(".vault")?i.path:`${i.path}.vault`;else e=A.resolve(process.cwd(),".env.vault");return K.existsSync(e)?e:null}function Ce(i){return i[0]==="~"?A.join(it.homedir(),i.slice(1)):i}function Et(i){let e=N(process.env.DOTENV_CONFIG_DEBUG||i&&i.debug),t=N(process.env.DOTENV_CONFIG_QUIET||i&&i.quiet);(e||!t)&&Ie("Loading env from encrypted .env.vault");let s=u._parseVault(i),n=process.env;return i&&i.processEnv!=null&&(n=i.processEnv),u.populate(n,s,i),{parsed:s}}function mt(i){let e=A.resolve(process.cwd(),".env"),t="utf8",s=process.env;i&&i.processEnv!=null&&(s=i.processEnv);let n=N(s.DOTENV_CONFIG_DEBUG||i&&i.debug),r=N(s.DOTENV_CONFIG_QUIET||i&&i.quiet);i&&i.encoding?t=i.encoding:n&&D("No encoding is specified. UTF-8 is used by default");let a=[e];if(i&&i.path)if(!Array.isArray(i.path))a=[Ce(i.path)];else{a=[];for(let h of i.path)a.push(Ce(h))}let o,c={};for(let h of a)try{let m=u.parse(K.readFileSync(h,{encoding:t}));u.populate(c,m,i)}catch(m){n&&D(`Failed to load ${h} ${m.message}`),o=m}let p=u.populate(s,c,i);if(n=N(s.DOTENV_CONFIG_DEBUG||n),r=N(s.DOTENV_CONFIG_QUIET||r),n||!r){let h=Object.keys(p).length,m=[];for(let W of a)try{let b=A.relative(process.cwd(),W);m.push(b)}catch(b){n&&D(`Failed to load ${W} ${b.message}`),o=b}Ie(`injecting env (${h}) from ${m.join(",")} ${ct(`-- tip: ${at()}`)}`)}return o?{parsed:c,error:o}:{parsed:c}}function Tt(i){if(ve(i).length===0)return u.configDotenv(i);let e=Ne(i);return e?u._configVault(i):(ut(`You set DOTENV_KEY but you are missing a .env.vault file at ${e}. Did you forget to build it?`),u.configDotenv(i))}function _t(i,e){let t=Buffer.from(e.slice(-64),"hex"),s=Buffer.from(i,"base64"),n=s.subarray(0,12),r=s.subarray(-16);s=s.subarray(12,-16);try{let a=nt.createDecipheriv("aes-256-gcm",t,n);return a.setAuthTag(r),`${a.update(s)}${a.final()}`}catch(a){let o=a instanceof RangeError,c=a.message==="Invalid key length",p=a.message==="Unsupported state or unable to authenticate data";if(o||c){let h=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw h.code="INVALID_DOTENV_KEY",h}else if(p){let h=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw h.code="DECRYPTION_FAILED",h}else throw a}}function gt(i,e,t={}){let s=Boolean(t&&t.debug),n=Boolean(t&&t.override),r={};if(typeof e!="object"){let a=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw a.code="OBJECT_REQUIRED",a}for(let a of Object.keys(e))Object.prototype.hasOwnProperty.call(i,a)?(n===!0&&(i[a]=e[a],r[a]=e[a]),s&&D(n===!0?`"${a}" is already defined and WAS overwritten`:`"${a}" is already defined and was NOT overwritten`)):(i[a]=e[a],r[a]=e[a]);return r}var u={configDotenv:mt,_configVault:Et,_parseVault:ht,config:Tt,decrypt:_t,parse:dt,populate:gt};T.exports.configDotenv=u.configDotenv;T.exports._configVault=u._configVault;T.exports._parseVault=u._parseVault;T.exports.config=u.config;T.exports.decrypt=u.decrypt;T.exports.parse=u.parse;T.exports.populate=u.populate;T.exports=u});var ft={};Le(ft,{default:()=>k});module.exports=Ve(ft);var f=require("obsidian");var Q={enabled:!1,showFileName:!0,showVaultName:!0,timeMode:"file",useCustomTemplate:!1,customDetailsTemplate:"%activity_type%: %active_note_name%",customStateTemplate:"Vault: %vault_name%",enableCustomButton:!1,customButtonLabel:"Visit My Website",customButtonUrl:"",hideVaultName:!1,hideNoteName:!1,hideSpecificPaths:!1,hiddenPaths:[]},Z="763813185022197831",X=15e3;var De=require("obsidian"),ye=z(_e()),be=z(Se());be.config();var P=class{constructor(){this.rpc=null;this.connected=!1;this.updateInterval=null;this.clientId=process.env.DISCORD_CLIENT_ID||Z}isConnected(){return this.connected}setCallbacks(e,t){this.onReadyCallback=e,this.onDisconnectedCallback=t}async connect(){if(this.connected)return!0;try{return this.rpc=new ye.Client({transport:"ipc"}),this.rpc.on("ready",()=>{this.connected=!0,this.updateInterval=setInterval(()=>{this.onReadyCallback&&this.onReadyCallback()},X),this.onReadyCallback&&this.onReadyCallback()}),this.rpc.on("disconnected",()=>{this.connected=!1,this.updateInterval&&(clearInterval(this.updateInterval),this.updateInterval=null),this.onDisconnectedCallback&&this.onDisconnectedCallback()}),await this.rpc.login({clientId:this.clientId}),!0}catch(e){return new De.Notice("Failed to connect to Discord. Is Discord running?"),this.connected=!1,!1}}async disconnect(){if(!(!this.connected||!this.rpc))try{this.updateInterval&&(clearInterval(this.updateInterval),this.updateInterval=null),await this.rpc.clearActivity(),await this.rpc.destroy(),this.rpc=null,this.connected=!1}catch(e){}}async setActivity(e){if(!(!this.connected||!this.rpc))try{await this.rpc.setActivity(e)}catch(t){}}};var L=class{processTemplate(e,t){var r;if(!e)return"";let s=e,n={"%active_note_name%":t.currentFile?t.currentFile.basename:"Unknown","%active_note_path%":t.currentFile?t.currentFile.path:"","%vault_name%":t.vault.getName(),"%folder_name%":t.currentFile?((r=t.currentFile.parent)==null?void 0:r.name)||"Root":"Unknown","%file_extension%":t.currentFile?t.currentFile.extension:"","%workspace_name%":t.vault.getName(),"%activity_type%":t.isReading?"Reading":"Editing"};return Object.entries(n).forEach(([a,o])=>{s=s.replace(new RegExp(a.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"g"),o)}),s}};var y=class{constructor(e){this.settings=e}isPathHidden(e){return!this.settings.hideSpecificPaths||this.settings.hiddenPaths.length===0?!1:this.settings.hiddenPaths.some(t=>(t=t.trim(),t?t===e?!0:t.endsWith("/")?e.startsWith(t):!1:!1))}shouldHideFile(e){return this.settings.hideNoteName||(e?this.isPathHidden(e):!1)}shouldHideVault(){return this.settings.hideVaultName}};var V=class{constructor(e,t,s,n){this.settings=e;this.vault=t;this.workspace=s;this.discordClient=n;this.startTime=Date.now();this.sessionStartTime=Date.now();this.templateProcessor=new L,this.privacyManager=new y(e)}updateSettings(e){this.settings=e,this.privacyManager=new y(e)}setFileStartTime(e=Date.now()){this.startTime=e}isInReadingMode(){var e;try{let t=this.workspace.activeLeaf;if(!t)return!1;let s=t.view;return s&&s.getViewType()==="markdown"?((e=s.currentMode)==null?void 0:e.type)==="preview":!1}catch(t){return!1}}createActivity(e){let t={largeImageKey:"obsidian",largeImageText:"Obsidian - A knowledge base",smallImageKey:"obsidian_small",smallImageText:"Taking notes",instance:!1},s=this.isInReadingMode(),n=e&&this.privacyManager.shouldHideFile(e.path),r=this.privacyManager.shouldHideVault();if(!n){if(this.settings.useCustomTemplate&&this.settings.customDetailsTemplate.trim()){let c={currentFile:e,vault:this.vault,isReading:s};t.details=this.templateProcessor.processTemplate(this.settings.customDetailsTemplate,c)}else if(!this.settings.useCustomTemplate&&this.settings.showFileName){let c=s?"Reading":"Editing";e?t.details=`${c}: ${e.basename}`:t.details=`${c} a note`}}if(this.settings.showVaultName&&!r){if(this.settings.useCustomTemplate&&this.settings.customStateTemplate.trim()){let c={currentFile:e,vault:this.vault,isReading:s};t.state=this.templateProcessor.processTemplate(this.settings.customStateTemplate,c)}else if(!this.settings.useCustomTemplate){let c=this.vault.getName();t.state=`Vault: ${c}`}}let a=this.settings.timeMode==="session"?this.sessionStartTime:this.startTime;t.startTimestamp=Math.floor(a/1e3);let o=[];return this.settings.enableCustomButton&&this.settings.customButtonUrl&&o.push({label:this.settings.customButtonLabel||"Visit My Website",url:this.settings.customButtonUrl}),o.length>0&&(t.buttons=o),t}async updatePresence(e){if(!this.discordClient.isConnected())return;let t=this.createActivity(e);await this.discordClient.setActivity(t)}};var B=class{constructor(e){this.statusBarItem=e}update(e,t){if(!this.statusBarItem)return;let s=e?"\u{1F7E2}":"\u{1F534}";this.statusBarItem.setText(s),this.statusBarItem.title=e?"Discord RPC Connected - Click to disconnect":"Discord RPC Disconnected - Click to connect",this.statusBarItem.onclick=async()=>{await t()}}};var d=require("obsidian"),x=class extends d.PluginSettingTab{constructor(t,s,n,r){super(t,s);this.settings=n,this.callbacks=r}updateSettings(t){this.settings=t}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Discord Rich Presence Settings"}),this.renderConnectionSection(),this.renderDisplayOptions(),this.renderPrivacySettings(),this.renderCustomTemplates(),this.renderCustomButton(),this.renderHelpSection()}renderConnectionSection(){let{containerEl:t}=this,n=t.createDiv("discord-rpc-status-container").createEl("div"),r=this.callbacks.isConnected();n.createEl("strong",{text:"Status: "}),n.createEl("span",{cls:r?"discord-rpc-status-connected":"discord-rpc-status-disconnected",text:r?"\u2713 Connected to Discord":"\u2717 Not connected to Discord"}),new d.Setting(t).setName("Discord Rich Presence").setDesc("Enable or disable Discord Rich Presence").addButton(a=>{a.setButtonText(this.callbacks.isEnabled()?"Disconnect":"Connect").setCta().onClick(async()=>{await this.callbacks.onToggleConnection(),this.displayWithScrollPreservation()})})}renderDisplayOptions(){let{containerEl:t}=this;t.createEl("h3",{text:"Display Options"}),new d.Setting(t).setName("Show file name").setDesc("Display the name of the currently open file").addToggle(s=>s.setValue(this.settings.showFileName).onChange(async n=>{this.settings.showFileName=n,await this.callbacks.onSettingsChange(this.settings)})),new d.Setting(t).setName("Show vault name").setDesc("Display the name of the current vault").addToggle(s=>s.setValue(this.settings.showVaultName).onChange(async n=>{this.settings.showVaultName=n,await this.callbacks.onSettingsChange(this.settings)})),new d.Setting(t).setName("Time tracking mode").setDesc("Choose between showing time for current file or entire session").addDropdown(s=>s.addOption("file","Current file time").addOption("session","Session time").setValue(this.settings.timeMode).onChange(async n=>{this.settings.timeMode=n,await this.callbacks.onSettingsChange(this.settings)}))}renderPrivacySettings(){let{containerEl:t}=this;t.createEl("h3",{text:"Privacy Settings"}),new d.Setting(t).setName("Hide vault name").setDesc("Hide the actual vault name and show generic text instead").addToggle(s=>s.setValue(this.settings.hideVaultName).onChange(async n=>{this.settings.hideVaultName=n,await this.callbacks.onSettingsChange(this.settings)})),new d.Setting(t).setName("Hide note name").setDesc('Hide specific note names and show generic "a document" instead').addToggle(s=>s.setValue(this.settings.hideNoteName).onChange(async n=>{this.settings.hideNoteName=n,await this.callbacks.onSettingsChange(this.settings)})),new d.Setting(t).setName("Hide specific files/folders").setDesc("Hide notes that match exact paths or entire folders").addToggle(s=>s.setValue(this.settings.hideSpecificPaths).onChange(async n=>{this.settings.hideSpecificPaths=n,await this.callbacks.onSettingsChange(this.settings),this.displayWithScrollPreservation()})),this.settings.hideSpecificPaths&&this.renderHiddenPaths()}renderHiddenPaths(){let{containerEl:t}=this;this.settings.hiddenPaths.forEach((n,r)=>{new d.Setting(t).setName(`Hidden path ${r+1}`).setDesc("Exact file path or folder path to hide").addText(a=>{a.setPlaceholder("e.g., Private/, Personal/Diary.md, MyNotes.md").setValue(n).onChange(async o=>{this.settings.hiddenPaths[r]=o.trim(),await this.callbacks.onSettingsChange(this.settings)}),this.setupPathSuggestions(a.inputEl)}).addButton(a=>{a.setButtonText("Remove").onClick(async()=>{this.settings.hiddenPaths.splice(r,1),await this.callbacks.onSettingsChange(this.settings),this.displayWithScrollPreservation()})})}),new d.Setting(t).setName("Add hidden path").setDesc("Add a new file, folder, or pattern to hide").addButton(n=>{n.setButtonText("Add path").setCta().onClick(async()=>{this.settings.hiddenPaths.push(""),await this.callbacks.onSettingsChange(this.settings),this.displayWithScrollPreservation()})});let s=t.createDiv("discord-rpc-help-text");s.createEl("strong",{text:"Pattern Examples:"}),s.createEl("br"),s.appendText("\u2022 "),s.createEl("code",{text:"Private/"}),s.appendText(" - Hide all files in Private folder"),s.createEl("br"),s.appendText("\u2022 "),s.createEl("code",{text:"Personal/Diary.md"}),s.appendText(" - Hide specific file in folder"),s.createEl("br"),s.appendText("\u2022 "),s.createEl("code",{text:"MyDiary.md"}),s.appendText(" - Hide specific file in root"),s.createEl("br"),s.appendText("\u2022 "),s.createEl("code",{text:"Work/"}),s.appendText(" - Hide all files in Work folder"),s.createEl("br"),s.createEl("em",{text:"Tip: Start typing to see file/folder suggestions"})}renderCustomTemplates(){let{containerEl:t}=this;t.createEl("h3",{text:"Custom Text Templates"}),new d.Setting(t).setName("Use custom templates").setDesc("Create fully customizable presence text with placeholders").addToggle(s=>s.setValue(this.settings.useCustomTemplate).onChange(async n=>{this.settings.useCustomTemplate=n,await this.callbacks.onSettingsChange(this.settings),this.displayWithScrollPreservation()})),this.settings.useCustomTemplate&&this.renderTemplateFields()}renderTemplateFields(){let{containerEl:t}=this;new d.Setting(t).setName("Activity text template").setDesc("Template for the top line of Discord presence").addTextArea(r=>{r.setPlaceholder("Example: %activity_type% %active_note_name% in %folder_name%/").setValue(this.settings.customDetailsTemplate).onChange(async a=>{this.settings.customDetailsTemplate=a,await this.callbacks.onSettingsChange(this.settings)}),r.inputEl.rows=2,r.inputEl.classList.add("discord-rpc-template-textarea")}),new d.Setting(t).setName("Location text template").setDesc("Template for the bottom line of Discord presence").addTextArea(r=>{r.setPlaceholder("Example: %vault_name% workspace").setValue(this.settings.customStateTemplate).onChange(async a=>{this.settings.customStateTemplate=a,await this.callbacks.onSettingsChange(this.settings)}),r.inputEl.rows=2,r.inputEl.classList.add("discord-rpc-template-textarea")});let s=t.createDiv("discord-rpc-placeholder-help");s.createEl("strong",{text:"Available Placeholders:"}),s.createEl("br"),[{code:"%activity_type%",desc:'"Reading" or "Editing" based on current mode'},{code:"%active_note_name%",desc:"Current note name"},{code:"%active_note_path%",desc:"Full path to current note"},{code:"%vault_name%",desc:"Vault name"},{code:"%folder_name%",desc:"Current note's folder"},{code:"%file_extension%",desc:"File extension (md, txt, etc.)"},{code:"%workspace_name%",desc:"Same as vault name"}].forEach(r=>{s.appendText("\u2022 "),s.createEl("code",{text:r.code}),s.appendText(` - ${r.desc}`),s.createEl("br")}),s.createEl("br"),s.createEl("strong",{text:"Example: "}),s.appendText('"\u{1F4DD} %activity_type% %active_note_name% in %vault_name%"')}renderCustomButton(){let{containerEl:t}=this;t.createEl("h3",{text:"Custom Button"}),new d.Setting(t).setName("Enable custom button").setDesc("Add a custom button to your Discord profile that others can click").addToggle(s=>s.setValue(this.settings.enableCustomButton).onChange(async n=>{this.settings.enableCustomButton=n,await this.callbacks.onSettingsChange(this.settings),this.displayWithScrollPreservation()})),this.settings.enableCustomButton&&this.renderCustomButtonFields()}renderCustomButtonFields(){let{containerEl:t}=this;new d.Setting(t).setName("Button label").setDesc("Text shown on the button (max 32 characters)").addText(n=>n.setPlaceholder("Visit My Website").setValue(this.settings.customButtonLabel).onChange(async r=>{r.length<=32?(this.settings.customButtonLabel=r,await this.callbacks.onSettingsChange(this.settings)):(n.setValue(this.settings.customButtonLabel),new d.Notice("Button label must be 32 characters or less"))})),new d.Setting(t).setName("Button URL").setDesc("Website URL that opens when the button is clicked").addText(n=>n.setPlaceholder("https://example.com").setValue(this.settings.customButtonUrl).onChange(async r=>{r===""||r.startsWith("http://")||r.startsWith("https://")?(this.settings.customButtonUrl=r,await this.callbacks.onSettingsChange(this.settings)):new d.Notice("URL must start with http:// or https://")}));let s=t.createDiv("discord-rpc-button-help");s.createEl("strong",{text:"Note: "}),s.appendText("The custom button will appear on your Discord profile when enabled."),s.createEl("br"),s.appendText("Other Discord users can click this button to visit your website.")}renderHelpSection(){let{containerEl:t}=this,s=t.createDiv("discord-rpc-main-help");s.createEl("h4",{text:"Contributing"});let n=s.createEl("p");n.appendText("Found a bug or have a feature request? "),n.createEl("a",{text:"Open an issue",href:"https://github.com/Ray-kong/Obsidian-Customize-DiscordRPC/issues"}),n.appendText(" on GitHub!");let r=s.createEl("p");r.appendText("Pull requests are welcome! Check out the "),r.createEl("a",{text:"repository",href:"https://github.com/Ray-kong/Obsidian-Customize-DiscordRPC"}),r.appendText(" to contribute."),s.createEl("p",{cls:"discord-rpc-star-link"}).createEl("a",{text:"\u2B50 Star the project on GitHub",href:"https://github.com/Ray-kong/Obsidian-Customize-DiscordRPC",cls:"discord-rpc-star-button"})}setupPathSuggestions(t){var c;let s=this.app.vault.getAllLoadedFiles(),n=[];s.forEach(p=>{if(p instanceof d.TFile){n.push(p.path);let h=p.path.substring(0,p.path.lastIndexOf("/")+1);h&&!n.includes(h)&&n.push(h)}else n.push(p.path+"/")});let r=`path-suggestions-${Math.random().toString(36).substring(2,11)}`,a=document.createElement("datalist");a.id=r,n.sort().forEach(p=>{let h=document.createElement("option");h.value=p,a.appendChild(h)}),t.setAttribute("list",r),(c=t.parentElement)==null||c.appendChild(a);let o=new MutationObserver(p=>{p.forEach(h=>{h.removedNodes.forEach(m=>{m===t&&(a.remove(),o.disconnect())})})});t.parentElement&&o.observe(t.parentElement,{childList:!0,subtree:!0})}displayWithScrollPreservation(){let t=this.containerEl.closest(".modal-content, .vertical-tab-content")||this.containerEl.parentElement||document.documentElement,s=t.scrollTop;this.display(),requestAnimationFrame(()=>{t.scrollTop=s})}};var k=class extends f.Plugin{constructor(){super(...arguments);this.currentFile=null}async onload(){await this.loadSettings(),this.discordClient=new P,this.presenceManager=new V(this.settings,this.app.vault,this.app.workspace,this.discordClient);let t=this.addStatusBarItem();this.statusBarManager=new B(t),this.updateStatusBar(),this.discordClient.setCallbacks(()=>this.onDiscordReady(),()=>this.onDiscordDisconnected()),this.settings.enabled&&await this.connectDiscord(),this.registerEventListeners(),this.registerCommands(),this.addSettingTab(this.createSettingTab())}onunload(){this.discordClient.disconnect()}registerEventListeners(){this.registerEvent(this.app.workspace.on("active-leaf-change",()=>{this.handleActiveLeafChange()})),this.registerEvent(this.app.workspace.on("file-open",t=>{this.handleFileOpen(t)})),this.registerEvent(this.app.vault.on("rename",t=>{t instanceof f.TFile&&this.currentFile&&t.path===this.currentFile.path&&this.updatePresence()})),this.registerEvent(this.app.workspace.on("layout-change",()=>{setTimeout(()=>{this.updatePresence()},100)}))}registerCommands(){this.addCommand({id:"toggle-discord-rpc",name:"Toggle Discord Rich Presence",callback:async()=>{await this.toggleConnection()}}),this.addCommand({id:"reconnect-discord-rpc",name:"Reconnect Discord Rich Presence",callback:async()=>{await this.disconnectDiscord(),await this.connectDiscord(),this.discordClient.isConnected()&&new f.Notice("Discord Rich Presence reconnected")}})}createSettingTab(){let t={onToggleConnection:()=>this.toggleConnection(),onSettingsChange:s=>this.updateSettings(s),isConnected:()=>this.discordClient.isConnected(),isEnabled:()=>this.settings.enabled};return new x(this.app,this,this.settings,t)}async onDiscordReady(){this.settings.enabled=!0,await this.saveSettings(),this.updateStatusBar(),this.updatePresence()}onDiscordDisconnected(){this.updateStatusBar()}async loadSettings(){let t=await this.loadData();this.settings=Object.assign({},Q,t),await this.migrateOldSettings(t)}async migrateOldSettings(t){let s=!1;if(t){let n=t;["showTimeElapsed","useCustomDetails","customDetailsPrefix","customStatePrefix","customDetails","customState"].forEach(a=>{a in n&&(delete n[a],s=!0)}),s&&await this.saveSettings()}}async saveSettings(){await this.saveData(this.settings)}async updateSettings(t){this.settings=t,this.presenceManager.updateSettings(t),await this.saveSettings(),this.settings.enabled&&!this.discordClient.isConnected()?await this.connectDiscord():!this.settings.enabled&&this.discordClient.isConnected()?await this.disconnectDiscord():this.discordClient.isConnected()&&this.updatePresence()}async connectDiscord(){await this.discordClient.connect()||(this.settings.enabled=!1,await this.saveSettings()),this.updateStatusBar()}async disconnectDiscord(){await this.discordClient.disconnect(),this.settings.enabled=!1,await this.saveSettings(),this.updateStatusBar()}async toggleConnection(){this.discordClient.isConnected()?(await this.disconnectDiscord(),new f.Notice("Discord Rich Presence disconnected")):(await this.connectDiscord(),this.discordClient.isConnected()&&new f.Notice("Discord Rich Presence connected"))}handleActiveLeafChange(){let t=this.app.workspace.getActiveFile();t&&this.handleFileOpen(t)}handleFileOpen(t){t!==this.currentFile&&(this.currentFile=t,this.presenceManager.setFileStartTime(),this.updatePresence())}updatePresence(){this.presenceManager.updatePresence(this.currentFile)}updateStatusBar(){this.statusBarManager.update(this.discordClient.isConnected(),()=>this.toggleConnection())}};
